/*
 * This file was automatically generated by EvoSuite
 * Sun Sep 03 21:18:17 GMT 2023
 */

package com.formento.cadastro.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.formento.cadastro.util.LocalDateTimeUtil;
import java.time.LocalDateTime;
import java.time.format.DateTimeParseException;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocalDateTimeUtil_ESTest extends LocalDateTimeUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = new Long(1L);
      LocalDateTime localDateTime0 = LocalDateTimeUtil.fromLong(long0);
      Long long1 = LocalDateTimeUtil.toLong(localDateTime0);
      assertTrue(long1.equals((Object)long0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long((-1047L));
      LocalDateTime localDateTime0 = LocalDateTimeUtil.fromLong(long0);
      Long long1 = LocalDateTimeUtil.toLong(localDateTime0);
      assertTrue(long1.equals((Object)long0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalDateTime localDateTime0 = LocalDateTimeUtil.fromText("01-01-1970 00:00:00");
      assertNotNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocalDateTimeUtil.toLong((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.formento.cadastro.util.LocalDateTimeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocalDateTimeUtil.toDate((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.formento.cadastro.util.LocalDateTimeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocalDateTimeUtil.fromText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // text
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocalDateTimeUtil.fromLong((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.formento.cadastro.util.LocalDateTimeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocalDateTimeUtil.fromDate((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.formento.cadastro.util.LocalDateTimeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocalDateTimeUtil.format((LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.formento.cadastro.util.LocalDateTimeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long(0L);
      LocalDateTime localDateTime0 = LocalDateTimeUtil.fromLong(long0);
      Date date0 = LocalDateTimeUtil.toDate(localDateTime0);
      LocalDateTime localDateTime1 = LocalDateTimeUtil.fromDate(date0);
      assertNotSame(localDateTime0, localDateTime1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalDateTimeUtil localDateTimeUtil0 = new LocalDateTimeUtil();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Long long0 = new Long(0L);
      LocalDateTime localDateTime0 = LocalDateTimeUtil.fromLong(long0);
      Long long1 = LocalDateTimeUtil.toLong(localDateTime0);
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long(0L);
      LocalDateTime localDateTime0 = LocalDateTimeUtil.fromLong(long0);
      String string0 = LocalDateTimeUtil.format(localDateTime0);
      assertEquals("01-01-1970 00:00:00", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        LocalDateTimeUtil.fromText("lG=,KHF");
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // Text 'lG=,KHF' could not be parsed at index 0
         //
         verifyException("java.time.format.DateTimeFormatter", e);
      }
  }
}
